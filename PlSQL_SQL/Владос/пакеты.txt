

CREATE TABLE table1(
n number,
a number,
b number,
c number,
a2 number,
b2 number,
c2 number,
x1 number,
x2 number,
p varchar2(60),
constraint table1 primary key(n)
);

INSERT into table1(n, a, b) VALUES (1, 3, 5);
INSERT into table1(n, a, b) VALUES (2, 0, 5);
INSERT into table1(n, a, b) VALUES (3, 0, 0);

INSERT into table1(n, a, b, c) VALUES (4, -2, 0, 3);
INSERT into table1(n, a, b, c) VALUES (5, -1, 5, 3);
INSERT into table1(n, a, b, c) VALUES (6, 0, 5, 3);
INSERT into table1(n, a, b, c) VALUES (7, 1, -50, 10.1);
INSERT into table1(n, a, b, c) VALUES (8, 1, 2, 3);
INSERT into table1(n, a, b, c) VALUES (9, 5, -1, 5);

INSERT into table1(n, a, b, c, a2, b2, c2) values (10, 4, -2, 22, 6, 1, 45);
INSERT into table1(n, a, b, c, a2, b2, c2) values (11, 3, -2, 6, 6, 4, 32);
INSERT into table1(n, a, b, c, a2, b2, c2) values (12, 4, -2, 22, 12, -6, 66);

select * from table1;
drop table table1;

CREATE or replace PACKAGE F1 AS
    procedure line1(
        n in number,
        a in number,
        b in number,
        x1 out number,
        p out varchar2);

    procedure line2(
        n in number,
        a in number,
        b in number,
        c in number,
        x1 out number,
        x2 out number,
        p out varchar2);

    procedure line3(
        n in number,
        a in number,
        b in number,
        c in number,
        a2 in number,
        b2 in number,
        c2 in number,
        x1 out number,
        x2 out number,
        p out varchar2);
end F1;

CREATE or replace PACKAGE BODY F1 
IS
    procedure line1(
        n in number,
        a in number,
        b in number,
        x1 out number,
	p out varchar2) is
        begin
            dbms_output.put_line('n:' || n || ',a:' || a || ',b:' || b || ',x1' || x1);
            if a = 0 and b = 0 then
                p := 'Х любое число';
            else if a = 0 and b != 0 then
                p := 'Решений нет';
            else
                x1:= b/a;
            end if;
            end if;
	--exception
    	 --when others then
      	  --raise_application_error(-20001, 'Ошибка!');
        end;

    procedure line2(        
        n in number,
        a in number,
        b in number,
        c in number,
        x1 out number,
        x2 out number,
	p out varchar2) is
	 Y number := 0;
	begin
    dbms_output.put_line('n:' || n || ',a:' || a || ',b:' || b || ',c:' || c || ',x1' || x1 || ',x2' || x2);
    Y := (b * b) - 4 * a * c;
    DBMS_OUTPUT.PUT_LINE('Y: ' || Y);
    if a = 0 then
	  p := 'Это не квадратное уравнение';
    else if Y < 0 then
    p := 'Действительных корней нет!';
    else if Y = 0 then
	  x1 := -b / (2 * a);
        else
	  x1 := (-b + sqrt(Y)) / (2 * a);
	  x2 := (-b - sqrt(Y)) / (2 * a);
        end if;
    end if;
    end if;
	--exception
    --	 when others then
    --  	  raise_application_error(-20001, 'Ошибка!');
	end;

    procedure line3(
        n in number,
        a in number,
        b in number,
        c in number,
        a2 in number,
        b2 in number,
        c2 in number,
        x1 out number,
        x2 out number,
        p out varchar2) is
    	 vA1 number;
    	 vA2 number;
    	 vB1 number;
    	 vB2 number;
    	 vC1 number;
    	 vC2 number;
    	 vX1 number;
    	 vX2 number;
    	 delta number;
    	 deltax number;
    	 deltay number;
	 begin
	 dbms_output.put_line('n:' || n || ',a:' || a || ',b:' || b || ',c:' || c || ',a2:' || a2 || ',b2:' || b2 || ',c2:' || c2 || ',x1' || x1 || ',x2' || x2);
	 if a = 0 or a2 = 0 or b = 0 or b2 = 0 then
		p := 'Не является СЛАУ!';
	 else
		vA1 := A;
      		vA2 := A2;
      		vB1 := B;
      		vB2 := B2;
      		vC1 := C;
      		vC2 := C2;
      		delta := (A * B2) - (B * A2);
		if delta = 0 then
        	 p := 'Корней нет';
      		else
        	 deltax := (C * B2) - (B * C2);
        	 deltay := (A * C2) - (C * A2);
        	 X1 := deltax / delta;
        	 X2 := deltay / delta;
      		 end if;
    		end if;
	--exception
    --	 when others then
    --  	  raise_application_error(-20001, 'Ошибка!');
	end;

Begin
  --set serveroutput on;
  DBMS_OUTPUT.PUT_LINE('F1 begin');
  DBMS_OUTPUT.PUT_LINE('F1 end');
  --exception
  --  when others then
  --    DBMS_OUTPUT.PUT_LINE('Ошибка пакета!');
  --   raise_application_error(-20001, 'Ошибка пакета!');
End F1;


set serveroutput on;
declare
  vX1 number;
  vX2 number;
  vMessage varchar2(100);
BEGIN
  --set serveroutput on;
  for i in (select n, a, b, c, a2, b2, c2 from table1) loop
    DBMS_OUTPUT.PUT_LINE('n: ' || i.n || ', a: ' || i.a || ', i.b: ' || i.b || ', i.c: ' || i.c || ', i.a2: ' || i.a2 || ', i.b2: ' || i.b2 || ', i.c2: ' || i.c2);
    vMessage := null;
    if i.c is null then
      vX1 := 0;
      F1.Line1(i.n, i.a, i.b, vX1, vMessage);
      if vMessage is not null then
        update table1
        set p = vMessage
        where n = i.n;
        commit;
      else
        update table1
        set x1 = vX1
        where n = i.n;
        commit;
      end if;
    elsif i.A2 is null then
      vX1 := 0;
      vX2 := 0;
      F1.Line2(i.n, i.A, i.B, i.C, vX1, vX2, vMessage);
      if vMessage is not null then
        update table1
        set p = vMessage
        where n = i.n;
        commit;
      else
        update table1
        set x1 = vX1,
        x2 = vX2
        where n = i.n;
        commit;
      end if;
    else
      vX1 := 0;
      vX2 := 0;
      F1.Line3(i.n, i.A, i.B, i.C, i.A2, i.B2, i.C2, vX1, vX2, vMessage);
      if vMessage is not null then
        update table1
        set p = vMessage
        where n = i.n;
        commit;
      else
        update table1
        set x1 = vX1,
        x2 = vX2
        where n = i.n;
        commit;
      end if;
    end if;
  end loop;
end;

select * from table1;