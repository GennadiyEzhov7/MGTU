{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ca3af22\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"contaiter\"\n}, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  class: \"canvas\",\n  id: \"canvas\",\n  width: \"600\",\n  height: \"600\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Ваш браузер не поддерживает рисование.\")])], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Menu = _resolveComponent(\"Menu\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_Menu, {\n    turnEngine: $options.turnEngine,\n    pause: $options.turnPause,\n    inputs: $data.inputs,\n    setInputs: $options.setInputs,\n    gameState: $data.gameState,\n    setGameState: $options.setGameState,\n    start: $options.fall,\n    s: $data.s,\n    v: $data.v,\n    setStartTime: $options.setStartTime,\n    gameTime: $data.gameTime,\n    currentFuel: $data.currentFuel\n  }, null, 8\n  /* PROPS */\n  , [\"turnEngine\", \"pause\", \"inputs\", \"setInputs\", \"gameState\", \"setGameState\", \"start\", \"s\", \"v\", \"setStartTime\", \"gameTime\", \"currentFuel\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEACEA,oBAIM,KAJN,EAIM;AAJDC,OAAK,EAAC;AAIL,CAJN,EAAsB,cACpBD,oBAES,QAFT,EAES;AAFDC,OAAK,EAAC,QAEL;AAFcC,IAAE,EAAC,QAEjB;AAF0BC,OAAK,EAAC,KAEhC;AAFsCC,QAAM,EAAC;AAE7C,CAFT,gBACEJ,oBAA6C,GAA7C,EAA6C,IAA7C,EAAG,wCAAH,EADF,CADoB,CAAtB;;AAAA;;;;;6DAAAK,YAKAC,aAIEC,eAJF,EAIE;AAJKC,cAAU,EAAEC,mBAIjB;AAJ8BC,SAAK,EAAED,kBAIrC;AAJiDE,UAAM,EAAEC,YAIzD;AAHKC,aAAS,EAAEJ,kBAGhB;AAH4BK,aAAS,EAAEF,eAGvC;AAHmDG,gBAAY,EAAEN,qBAGjE;AAFKO,SAAK,EAAEP,aAEZ;AAFmBQ,KAAC,EAAEL,OAEtB;AAF0BM,KAAC,EAAEN,OAE7B;AAFiCO,gBAAY,EAAEV,qBAE/C;AAF8DW,YAAQ,EAAER,cAExE;AADKS,eAAW,EAAET;AAClB,GAJF;;AAAA","names":["_createElementVNode","class","id","width","height","_hoisted_1","_createVNode","_component_Menu","turnEngine","$options","pause","inputs","$data","setInputs","gameState","setGameState","start","s","v","setStartTime","gameTime","currentFuel"],"sourceRoot":"","sources":["C:\\Users\\mvarlamov\\Desktop\\web\\lab4\\src\\components\\Game.vue"],"sourcesContent":["<template>\n  <div class=\"contaiter\">\n    <canvas class=\"canvas\" id=\"canvas\" width=\"600\" height=\"600\">\n      <p>Ваш браузер не поддерживает рисование.</p>\n    </canvas>\n  </div>\n  <Menu :turnEngine=\"turnEngine\" :pause=\"turnPause\" :inputs=\"inputs\"\n        :setInputs=\"setInputs\" :gameState=\"gameState\" :setGameState=\"setGameState\"\n        :start=\"fall\" :s=\"s\" :v=\"v\" :setStartTime=\"setStartTime\" :gameTime=\"gameTime\"\n        :currentFuel=\"currentFuel\"\n  />\n</template>\n\n<script>\nimport Menu from '@/components/Menu.vue'\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Game',\n  props: [],\n  components: {\n    Menu\n  },\n  data() {\n    return {\n      gameState: 'set',\n      engine: false,\n      pause: false,\n      x: 265,\n      y: 0,\n      s: 0,\n      v: 0,\n      v0: 0,\n      s0: 0,\n      currentFuel: 0,\n      currentTime: new Date().getTime(),\n      startTime: 0,\n      gameTime: 0,\n      pauseTime: 0,\n      rocketON: new Image(),\n      rocketOFF: new Image(),\n      pauseImg: new Image(),\n      explosionImg: new Image(),\n      inputs: [\n        { title: \"Вес аппарата, кг\", value: \"1500\" },\n        { title: \"Вес топлива, кг\", value: \"500\" },\n        { title: \"Вес импульса, кг\", value: \"10\" },\n        { title: \"Скорость истечения, м/с\", value: \"300\" },\n        { title: \"Максимальная скорость касания, м/с\", value: \"10\" },\n        { title: \"Ускорение свободного падения, м/с\", value: \"10\" },\n        { title: \"Лимит времени, с\", value: \"120\" },\n        { title: \"Начальное расстояние, м\", value: \"1000\" },\n      ]\n    }\n  },\n  methods: {\n    setStartTime(){\n      this.startTime = new Date().getTime();\n    },\n    setGameState(state){\n      this.gameState = state;\n      this.currentTime = new Date().getTime();\n      if (state === 'set') {\n        this.restart()\n      }\n    },\n    setInputs(id, newValue) {\n      this.inputs[id].value = newValue;\n    },\n    drawRocket() {\n      const canvas = document.getElementById(\"canvas\"),\n            ctx = canvas.getContext(\"2d\");\n\n      this.engine ? ctx.drawImage(this.rocketON, this.x, this.y) : ctx.drawImage(this.rocketOFF, this.x, this.y);\n    },\n    fall() {\n      this.currentFuel = Number(this.inputs[1].value);\n      const finishY = 460;\n      const koef = (this.inputs[7].value / finishY)\n      const canvas = document.getElementById(\"canvas\"),\n            ctx = canvas.getContext(\"2d\");\n      const refreshInterval = setInterval(function() {\n        this.disableAndActivateButtons();\n\n        if (this.pause) {ctx.drawImage(this.pauseImg, 0, 0); this.pauseTime = new Date().getTime() - this.currentTime}\n\n        if ((!this.pause) && (this.gameState === 'game')) {\n          if (this.y < finishY) {\n            this.gameTime = new Date().getTime() - this.startTime;\n            if ((this.currentFuel > 0) && (this.engine)) {\n              this.currentFuel -= Number(this.inputs[2].value);\n              if (this.currentFuel < 0) { this.currentFuel = 0; }\n              this.v = (((Number(this.inputs[0].value) + Number(this.inputs[1].value)) * this.v)\n                      - (Number(this.inputs[2].value) * Number(this.inputs[3].value)))\n                  / (Number(this.inputs[0].value) + Number(this.inputs[1].value) - Number(this.inputs[2].value));\n              this.s = this.s0 + (new Date().getTime() -  this.currentTime) / 1000 * this.v;\n              this.y = this.s / koef ;\n            } else {\n              if (this.engine) {\n                this.engine = false;\n                this.s0 = this.s;\n                this.v0 = this.v;\n              }\n              this.v = this.v0 + (new Date().getTime() - this.currentTime)/1000 * Number(this.inputs[5].value);\n              this.s = this.s0 + (new Date().getTime() - this.currentTime)/1000 * this.v;\n              this.y = this.s / koef;\n            }\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            this.drawRocket();\n          } else {\n            if (this.v <= Number(this.inputs[4].value)) {\n              ctx.fillStyle = \"#FFF\";\n              ctx.font = \"30pt Calibri\";\n              ctx.fillText(\"You win!\", 30, 280);\n              this.setGameState('restart');\n              clearInterval(refreshInterval);\n            } else {\n              ctx.clearRect(0, 0, canvas.width, canvas.height);\n              ctx.drawImage(this.explosionImg, this.x-20, this.y);\n              this.setGameState('restart');\n              clearInterval(refreshInterval);\n            }\n          }\n        }\n      }.bind(this), 25)\n    },\n    turnEngine() {\n      if (!document.getElementById('engine').classList.contains('disabled') && this.currentFuel > 0) {\n        this.engine = !this.engine;\n        this.v0 = this.v;\n        this.s0 = this.s;\n        this.currentTime = new Date().getTime();\n        const canvas = document.getElementById(\"canvas\"),\n            ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        this.drawRocket();\n      }\n    },\n    turnPause() {\n      if (!document.getElementById('pause').classList.contains('disabled')) {\n        this.pause = !this.pause;\n        this.v0 = this.v;\n        this.s0 = this.s;\n        this.currentTime = new Date().getTime();\n        if (!this.pause) { this.startTime += this.pauseTime; }\n      }\n    },\n    disableAndActivateButtons() {\n      if ((this.y > 460) || (this.pause) || (this.gameState === 'set')) {\n        const engineButton = document.getElementById('engine');\n        engineButton.classList.add('disabled')\n      } else {\n        const engineButton = document.getElementById('engine');\n        engineButton.classList.remove('disabled')\n      }\n      if ((this.y > 460) || (this.gameState === 'set')) {\n        const pauseButton = document.getElementById('pause');\n        pauseButton.classList.add('disabled');\n      } else {\n        const pauseButton = document.getElementById('pause');\n        pauseButton.classList.remove('disabled');\n      }\n    },\n    restart() {\n      this.v = 0;\n      this.v0= 0;\n      this.s = 0;\n      this.s0 = 0;\n      this.y = 0;\n      const canvas = document.getElementById(\"canvas\"),\n          ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  },\n  mounted() {\n    this.pauseImg.src='./img/pause.png';\n    this.rocketON.src = './img/engineOn.png';\n    this.rocketOFF.src = './img/engineOff.png';\n    this.explosionImg.src = './img/explosion.png';\n  },\n}\n</script>\n\n<style scoped>\n.canvas {\n  background: url('/public/img/background.jpg') no-repeat;\n  width: 600px;\n  height: 600px;\n}\nhtml, body {\n  background-color: black;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}